#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Q2. Some English words can be transferred to another one by reorder the letters. 
For example,  ‘how’ and ‘who’.  
Requirements:
•	Input: A number of words, each word will be in one line;
•	Output:  Print out the number of words in each group and the words in the group ordered by the number of words in the group from the largest to the smallest.
For example:
•	Input:
how
who
here
paw
wap
awp
•	Output:
3: paw, wap, awp
2: how, who
1: here

3)	Use test driven development method and present the TDD process in your code environment (not the general flow) in this assignment;
"""

import unittest

class TddInPythonExample(unittest.TestCase):
 
  def test_groupWords_method_1(self):
    myClass = MyClass()
    words = ['paw', 'wap', 'here', 'how', 'awp', 'who']
    result = myClass.groupWords(words)
    self.assertEqual([['paw', 'wap', 'awp'], ['how', 'who'], ['here']], result)

  def test_groupWords_method_2(self):
    myClass = MyClass()
    words = ['from', 'yes', 'form']
    result = myClass.groupWords(words)
    self.assertEqual([['from', 'form'], ['yes']], result)

class MyClass():

  def getInputs(self):
    wordList = []
    while True:
      word = input('input the word!(Empty word to exit): ')
      if word == '':
        break
      wordList.append(word)
    return wordList

  def groupWords(self, wordList):
    # group words
    wordDict = {}
    for word in wordList:
      key = ''.join(sorted(word))
      if wordDict.get(key) == None:
        wordDict[key] = []
      wordDict[key].append(word)
    tempList = list(wordDict.values()) # dict values to list
    # TODO: 如果有同樣個數的組, 排序會不固定, unit test 會判斷失敗
    tempList = sorted(tempList, key=lambda x:len(x), reverse=True) # order by largest to smallest
    return tempList

  def printResult(self, wordList):
    for g in wordList:
      print("%s: %s" % (len(g), ', '.join(g)))

if __name__ == '__main__':
  cmd = input('enter 1 run unit test, enter 2 run this code: ')
  if cmd == '1':
    unittest.main()
  elif cmd == '2':
    myClass = MyClass()
    wordList = myClass.getInputs()
    result = myClass.groupWords(wordList)
    myClass.printResult(result)

